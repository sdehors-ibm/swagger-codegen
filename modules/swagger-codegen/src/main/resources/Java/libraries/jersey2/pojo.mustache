import io.swagger.annotations.*;

import java.util.Objects;
import java.util.List;
import java.util.ArrayList;

import javax.json.bind.annotation.JsonbProperty;
import javax.json.bind.annotation.JsonbTypeAdapter;
import javax.json.bind.adapter.JsonbAdapter;
import javax.json.JsonArray;
import javax.json.Json;
import javax.json.JsonArrayBuilder;

{{#description}}@ApiModel(description = "{{{description}}}"){{/description}}

public class {{classname}} {{#parent}}extends {{{parent}}}{{/parent}} {{#serializableModel}}implements Serializable{{/serializableModel}} {
  {{#vars}}
      {{#isEnum}}
          {{^isContainer}}
  @JsonbTypeAdapter({{datatypeWithEnum}}Adapter.class)
  {{>enumClass}}
  {{>enumAdapter}}
          {{/isContainer}}
      {{/isEnum}}
      {{#items.isEnum}}
          {{#items}}
              {{^isContainer}}
  {{>enumClass}}
                {{/isContainer}}
  {{>listEnumAdapter}}
          {{/items}}
      {{/items.isEnum}}


  {{#isContainer}}
      {{#items.isEnum}}
  @JsonbTypeAdapter(List{{name}}Adapter.class)
      {{/items.isEnum}}
  {{/isContainer}}
  @JsonbProperty("{{baseName}}")
  private {{#useBeanValidation}}@Valid{{/useBeanValidation}} {{{datatypeWithEnum}}} {{name}} = {{{defaultValue}}};
  {{/vars}}




  {{#vars}}
  /**
   {{#description}}
   * {{description}}
   {{/description}}
   {{#minimum}}
   * minimum: {{minimum}}
   {{/minimum}}
   {{#maximum}}
   * maximum: {{maximum}}
   {{/maximum}}
   **/
  public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
    return this;
  }

  {{#vendorExtensions.extraAnnotation}}{{{vendorExtensions.extraAnnotation}}}{{/vendorExtensions.extraAnnotation}}
  @ApiModelProperty({{#example}}example = "{{{example}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}value = "{{{description}}}")
{{#useBeanValidation}}{{>beanValidation}}{{/useBeanValidation}}  public {{{datatypeWithEnum}}} {{#isBoolean}}is{{/isBoolean}}{{getter}}() {
    return {{name}};
  }
  public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
    this.{{name}} = {{name}};
  }

  {{/vars}}

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    {{classname}} {{classVarName}} = ({{classname}}) o;{{#hasVars}}
    return {{#vars}}Objects.equals({{name}}, {{classVarName}}.{{name}}){{#hasMore}} &&
        {{/hasMore}}{{^hasMore}};{{/hasMore}}{{/vars}}{{/hasVars}}{{^hasVars}}
    return true;{{/hasVars}}
  }

  @Override
  public int hashCode() {
    return Objects.hash({{#vars}}{{name}}{{#hasMore}}, {{/hasMore}}{{/vars}});
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class {{classname}} {\n");
    {{#parent}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
    {{#vars}}sb.append("    {{name}}: ").append(toIndentedString({{name}})).append("\n");
    {{/vars}}sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
